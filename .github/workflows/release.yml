name: Release

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: wokecrab
            asset_name: wokecrab-linux
          - os: windows-latest
            artifact_name: wokecrab.exe
            asset_name: wokecrab-windows.exe
          - os: macos-latest
            artifact_name: wokecrab
            asset_name: wokecrab-macos

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.asset_name }}
          path: target/release/${{ matrix.artifact_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: WokeCrab v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            artifacts/wokecrab-linux/wokecrab
            artifacts/wokecrab-windows.exe/wokecrab.exe
            artifacts/wokecrab-macos/wokecrab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  auto-tag:
    name: Auto Tag on Master Push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read Cargo.toml version
        id: cargo_version
        run: |
          VERSION=$(grep '^version =' Cargo.toml | head -1 | sed 's/.*= *//' | sed 's/"//g')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "v${{ steps.cargo_version.outputs.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_OUTPUT
          else
            echo "TAG_EXISTS=false" >> $GITHUB_OUTPUT
          fi

      - name: Create tag
        if: steps.check_tag.outputs.TAG_EXISTS == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v${{ steps.cargo_version.outputs.VERSION }}" -m "Release v${{ steps.cargo_version.outputs.VERSION }}"
          git push origin "v${{ steps.cargo_version.outputs.VERSION }}" 